name: Demo.Serverless.Hotels
concurrency: demo-serverless-hotels

on:
  push:
    branches:
      - main
      - feature/**

  workflow_dispatch: 

env:
  PackagePath: './published'
  FunctionAppName: 'ccfunkyhotels'
  ResourceGroupName: 'rg-cc-funky-hotels-dev'
  ResourceGroupLocation: 'australiasoutheast'                    

jobs:
  storageAccountWithQueue:
    name: 'storage account with queue'
    runs-on: ubuntu-latest
    env:
      queues: 'xxx, yyy, zzz'
    steps:
      - name: 'storage account with queue'
        uses: Cheranga/GitHubActions/storageaccount@master
        with:
          credentials: ${{secrets.AZURE_CREDENTIALS}}
          deploymentName: 'teststorageaccountwithqueues'
          resourceGroupName: ${{ env.ResourceGroupName }}
          name: 'ccsgabcblah'          
          location: ${{env.ResourceGroupLocation}}
          storageType: 'nonprod'
          queues: ${{ env.queues }}


  # functionAppWithSettings:
  #   name: 'Update function app settings'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: 'Update function app settings'
  #       uses: Cheranga/GitHubActions/functionappsettings@master
  #       with:
  #         deploymentName: 'testfunctionappsettings'
  #         resourceGroupName: ${{ env.ResourceGroupName }}
  #         location: ${{ env.ResourceGroupLocation }}
  #         credentials: ${{secrets.AZURE_CREDENTIALS}}
  #         functionAppName: 'ccfunkyhotelsdev'
  #         appSettings: ${{secrets.APP_SETTINGS}}
  # testkeyvaultdeployment:
  #   name: 'Create key vault with secrets'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: 'Create key vault with secrets'
  #       uses: Cheranga/GitHubActions/keyvaultwithsecrets@master
  #       with:
  #         credentials: ${{secrets.AZURE_CREDENTIALS}}
  #         keyVaultName: 'kvcctestblah'
  #         resourceGroupName: ${{ env.ResourceGroupName }}
  #         location: ${{ env.ResourceGroupLocation }}
  #         secretData: ${{secrets.SECRET_DATA}}
  # functionappdeployment:
  #   name: 'Create function app with related resources'    
  #   runs-on: ubuntu-latest    
  #   steps:      
  #     - name: 'Create and deploy function app'
  #       uses: Cheranga/GitHubActions/vanillafunctionapp@master
  #       with:
  #         credentials: ${{ secrets.AZURE_CREDENTIALS }}          
  #         environmentName: 'dev'          
  #         resourceGroupName: ${{ env.ResourceGroupName }}
  #         functionAppName: ${{ env.FunctionAppName }}
  #         location: ${{ env.ResourceGroupLocation }}
  #         category: 'nonprod'

  # buildanddeploy:
  #   needs: provision
  #   name: 'Build and Deploy'
  #   runs-on: ubuntu-latest      
  #   steps:
  #     - name: 'Build and Deploy the Function App'
  #       uses: Cheranga/GitHubActions/deploydotnetfunctionapp@master
  #       with:
  #         credentials: ${{secrets.AZURE_CREDENTIALS}}
  #         dotnetVersion: '6.0.x'
  #         functionAppName: '${{env.FunctionAppName}}dev'           