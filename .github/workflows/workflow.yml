name: Demo.Serverless.Hotels
concurrency: demo-serverless-hotels

on:
  push:
    branches:
      - main
      - feature/**
  workflow_dispatch:

jobs:
  deploy_resource_group:
    runs-on: ubuntu-latest

    env:
      ResourceGroupName: 'rg-cc-gha-hotels-dev'
      ResourceGroupLocation: 'australiasoutheast'
      StorageAccountName: 'sgccdemohotelsdev'
      StorageSku: 'Standard_LRS'
      StorageSkuTier: 'Standard'
      FunctionAppName: 'demohotels'
      EnvironmentName: 'dev'
      AspName: 'plan-demohotels-dev'
      PlanSku: 'Y1'
      PlanTier: 'Dynamic'
      SharedStorageAccount: 'sgccplatformdemo'

    steps:
      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}      
      # - name: 'Provision the resource group'
      #   uses: Azure/CLI@v1
      #   with:
      #     inlineScript: |
      #       #!/bin/bash            
      #       if $(az group exists --name ${{ env.ResourceGroupName }}) ; then
      #         echo "Azure resource group already exists, skipping creation..."
      #       else
      #         az group create --name ${{ env.ResourceGroupName }} --location ${{ env.ResourceGroupLocation }}
      #         echo "Azure resource group created"
      #       fi 
      # - name: 'Checkout repository'
      #   uses: actions/checkout@v2      
      # - name: 'Provision Azure Resources'             
      #   uses: azure/arm-deploy@v1
      #   with:
      #     failOnStdErr: false
      #     deploymentName: ${{ github.run_number }}
      #     resourceGroupName: ${{ env.ResourceGroupName }}
      #     template: ./Deploy/Resources/main.bicep
      #     parameters: > 
      #        buildNumber=${{ github.run_number }}
      #        sgName=${{ env.StorageAccountName }}
      #        storageSku=${{ env.StorageSku }}
      #        storageSkuTier=${{ env.StorageSkuTier }}
      #        functionAppName=${{ env.FunctionAppName }}
      #        environmentName=${{ env.EnvironmentName }}
      #        aspName=${{ env.AspName }}
      #        planSku=${{ env.PlanSku }}
      #        planTier=${{ env.PlanTier }}
      #        sharedStorageAccount=${{ env.SharedStorageAccount }}

      - name: 'Setup RBAC'
        uses: Azure/CLI@v1
        with:
          inlineScript: |  
            #!/bin/bash          
            funcAppDeployment = "${{ github.run_number }}"+"-functionapp"
            storageAccountDeployment = "${{ github.run_number }}"+"-storageaccount"

            echo $funcAppDeployment
            echo $storageAccountDeployment